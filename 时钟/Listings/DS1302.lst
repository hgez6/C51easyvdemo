C51 COMPILER V9.54   DS1302                                                                08/25/2020 10:01:55 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS13
                    -02.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <REGX52.H>
   2          sbit DS1302_SCLK=P3^6;
   3          sbit DS1302_IO=P3^4;
   4          sbit DS1302_CE=P3^5;
   5          #define DS1302_SECOND 0X80     //写入数据的代号，读取要加1
   6          #define DS1302_MINUTE   0X82
   7          #define DS1302_HOUR   0X84
   8          #define DS1302_DATE   0X86
   9          #define DS1302_MONTH  0X88
  10          #define DS1302_DAY    0X8A
  11          #define DS1302_YEAR   0X8C
  12          #define DS1302_WP     0X8E
  13          
  14          unsigned char DS1302_Time[]={20,8,25,10,01,55,2};
  15          void DS1302_WriteByte(unsigned char Command,Data)
  16          { unsigned int i;
  17   1        DS1302_CE=1;
  18   1        for(i=0;i<8;i++)
  19   1        {
  20   2        DS1302_IO=Command&(0x01<<i);
  21   2        DS1302_SCLK=1;
  22   2        DS1302_SCLK=0;
  23   2        }
  24   1        for(i=0;i<8;i++)
  25   1        {
  26   2        DS1302_IO=Data&(0x01<<i);
  27   2        DS1302_SCLK=1;
  28   2        DS1302_SCLK=0;
  29   2        }
  30   1        DS1302_CE=0;  
  31   1      }
  32          
  33          void DS1302_Init()
  34          {
  35   1        DS1302_CE=0;
  36   1        DS1302_SCLK=0;
  37   1         DS1302_WriteByte(DS1302_WP,0x00);
  38   1      
  39   1      }
  40          
  41          
  42          unsigned char DS1302_ReadByte(unsigned char Command)
  43          { unsigned int i;
  44   1        unsigned char Data=0x00;
  45   1        DS1302_CE=1;
  46   1        for(i=0;i<8;i++)
  47   1        {
  48   2        DS1302_IO=Command&(0x01<<i);
  49   2        DS1302_SCLK=0;
  50   2        DS1302_SCLK=1;
  51   2        }
  52   1          
  53   1        for(i=0;i<8;i++)
  54   1        {
C51 COMPILER V9.54   DS1302                                                                08/25/2020 10:01:55 PAGE 2   

  55   2          DS1302_SCLK=1;
  56   2         DS1302_SCLK=0;
  57   2        if(DS1302_IO){Data|=(0x01<<i);}
  58   2        }
  59   1        DS1302_CE=0;
  60   1        DS1302_IO=0;
  61   1        return Data;
  62   1      }
  63          
  64          void DS1302_settime()
  65          {
  66   1          DS1302_WriteByte(DS1302_WP,0x00);
  67   1        DS1302_WriteByte(DS1302_YEAR,DS1302_Time[0]/10*16+DS1302_Time[0]%10);
  68   1        DS1302_WriteByte(DS1302_MONTH,DS1302_Time[1]/10*16+DS1302_Time[1]%10);
  69   1        DS1302_WriteByte(DS1302_DATE,DS1302_Time[2]/10*16+DS1302_Time[2]%10);
  70   1        DS1302_WriteByte(DS1302_HOUR,DS1302_Time[3]/10*16+DS1302_Time[3]%10);
  71   1        DS1302_WriteByte(DS1302_MINUTE,DS1302_Time[4]/10*16+DS1302_Time[4]%10);
  72   1        DS1302_WriteByte(DS1302_SECOND,DS1302_Time[5]/10*16+DS1302_Time[5]%10);
  73   1        DS1302_WriteByte(DS1302_DAY,DS1302_Time[6]/10*16+DS1302_Time[6]%10);
  74   1        DS1302_WriteByte(DS1302_WP,0x80);
  75   1      
  76   1      }
  77            void DS1302_readtime()
  78          {
  79   1        unsigned char a;
  80   1        a=DS1302_ReadByte(DS1302_YEAR+1);
  81   1        DS1302_Time[0]=a/16*10+a%16;
  82   1        a=DS1302_ReadByte(DS1302_MONTH+1);
  83   1        DS1302_Time[1]=a/16*10+a%16;
  84   1        a=DS1302_ReadByte(DS1302_DATE+1);
  85   1        DS1302_Time[2]=a/16*10+a%16;
  86   1        a=DS1302_ReadByte(DS1302_HOUR+1);
  87   1        DS1302_Time[3]=a/16*10+a%16;
  88   1        a=DS1302_ReadByte(DS1302_MINUTE+1);
  89   1        DS1302_Time[4]=a/16*10+a%16;
  90   1        a=DS1302_ReadByte(DS1302_SECOND+1);
  91   1        DS1302_Time[5]=a/16*10+a%16;
  92   1        a=DS1302_ReadByte(DS1302_DAY+1);
  93   1        DS1302_Time[6]=a/16*10+a%16;
  94   1      }
  95          
  96             


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    590    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
